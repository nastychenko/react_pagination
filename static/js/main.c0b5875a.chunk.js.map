{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","existingPages","Math","ceil","pages","Array","from","length","_","i","prevAria","nextAria","handlePageCkick","page","className","classNames","disabled","href","onClick","map","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","currentItem","setCurrentItem","setCurrentPage","lastCurrentItem","id","value","onChange","event","target","htmlFor","numberOfPage","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAC5DC,EAA2B,IAAhBX,EACXY,EAAWZ,IAAgBK,EAAMG,OACjCK,EAAkB,SAACC,GACnBA,IAASd,GACXC,EAAaa,IAIjB,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,UAAWN,IAHjB,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAgBb,EAAc,IAL/C,oBAUDK,EAAMe,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IACT,YACA,CACEK,OAAQP,IAASd,IALvB,SASE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAgBC,IAJjC,SAMGA,KAdEA,MAkBT,oBACEC,UAAWC,IACT,YACA,CAAEC,UAAWL,IAHjB,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMN,EAAgBb,EAAc,IAL/C,0BCjEV,IAAMsB,ECLC,SAAoBf,EAAcgB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIlB,EAAMkB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgB+B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCH,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoBiC,EAApB,KAEMC,EAAkBH,EAAchC,EAAU,EAahD,OACE,sBAAKgB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,iCACoBgB,EADpB,cACqCG,EADrC,eAC2DZ,EAAMd,OADjE,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOrC,EACPsC,SA1BkB,SAACC,GAC3BN,EAAe,GACfC,EAAe,GACfH,GAAYQ,EAAMC,OAAOH,QAkBnB,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEjB,MAAOwB,EAAMd,OACbT,QAASA,EACTC,YAAaA,EACbC,aAtCgB,SAACwC,GACrBT,EAAeS,EAAe1C,EAAUA,EAAU,GAClDkC,EAAeQ,MAsCb,6BACGnB,EAAMoB,MAAMX,EAAc,EAAGG,GAAiBd,KAAI,SAAAuB,GAAI,OACrD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE5DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0b5875a.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (arg: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const existingPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: existingPages }, (_, i) => i + 1);\n  const prevAria = currentPage !== 1;\n  const nextAria = currentPage !== pages.length;\n  const handlePageCkick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: !prevAria },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevAria}\n            onClick={() => handlePageCkick(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageCkick(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: !nextAria },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextAria}\n            onClick={() => handlePageCkick(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentItem, setCurrentItem] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastCurrentItem = currentItem + perPage - 1;\n\n  const itemQuantityHandler = (event: { target: { value: string } }) => {\n    setCurrentItem(1);\n    setCurrentPage(1);\n    setPerPage(+event.target.value);\n  };\n\n  const changeHandler = (numberOfPage: number) => {\n    setCurrentItem(numberOfPage * perPage - perPage + 1);\n    setCurrentPage(numberOfPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page 1 (items ${currentItem} - ${lastCurrentItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={itemQuantityHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={changeHandler}\n      />\n      <ul>\n        {items.slice(currentItem - 1, lastCurrentItem).map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}