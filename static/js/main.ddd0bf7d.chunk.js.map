{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","onArrowClick","existingPages","Math","ceil","pages","Array","from","length","_","i","prevAria","nextAria","className","classNames","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","currentItem","setCurrentItem","setCurrentPage","lastCurrentItem","id","defaultValue","onChange","e","count","target","value","htmlFor","numberOfPage","num","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKP,EAAQC,GAClCO,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAC5DC,EAA2B,IAAhBZ,EACXa,EAAWb,IAAgBM,EAAMG,OAEvC,OACE,mCACE,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,UAAWJ,IAHjB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMhB,GAAc,IAL/B,oBAUDI,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASpB,IALvB,SASE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMjB,EAAamB,IAJ9B,SAMGA,KAdEA,MAkBT,oBACEN,UAAWC,IACT,YACA,CAAEC,UAAWH,IAHjB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAAMhB,EAAa,IAL9B,0BC9DV,IAAMoB,ECLC,SAAoBd,EAAce,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIjB,EAAMiB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgB+B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCH,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoBiC,EAApB,KAEMC,EAAkBH,EAAchC,EAAU,EAgBhD,OACE,sBAAKe,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,iCACoBiB,EADpB,cACqCG,EADrC,eAC2DZ,EAAMb,OADjE,OAIA,sBAAKK,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,aAAcrC,EACdsC,SAAU,SAAAC,GAAC,OA7BQC,GA6BiBD,EAAEE,OAAOC,MA5BrDX,EAAWS,QACXP,EAAe,GAFW,IAACO,GAwBrB,UAOE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEhB,MAAOwB,EAAMb,OACbV,QAASA,EACTC,YAAaA,EACbC,aAtCgB,SAAC0C,GACrBX,EAAeW,EAAe5C,EAAUA,EAAU,GAClDkC,EAAeU,IAqCXzC,aA3Ce,SAAC0C,GACpBX,EAAejC,EAAc4C,MA4C3B,6BACGtB,EAAMuB,MAAMd,EAAc,EAAGG,GAAiBf,KAAI,SAAA2B,GAAI,OACrD,6BAAgBA,GAAPA,YEhEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ddd0bf7d.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (arg: number) => void;\n  onArrowClick: (arg: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  onArrowClick,\n}) => {\n  const existingPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: existingPages }, (_, i) => i + 1);\n  const prevAria = currentPage !== 1;\n  const nextAria = currentPage !== pages.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: !prevAria },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevAria}\n            onClick={() => onArrowClick(-1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: !nextAria },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextAria}\n            onClick={() => onArrowClick(1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentItem, setCurrentItem] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastCurrentItem = currentItem + perPage - 1;\n\n  const itemQuantityHandler = (count: number) => {\n    setPerPage(count);\n    setCurrentItem(1);\n  };\n\n  const arrowHandler = (num: number) => {\n    setCurrentPage(currentPage + num);\n  };\n\n  const changeHandler = (numberOfPage: number) => {\n    setCurrentItem(numberOfPage * perPage - perPage + 1);\n    setCurrentPage(numberOfPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page 1 (items ${currentItem} - ${lastCurrentItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={e => itemQuantityHandler(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={changeHandler}\n        onArrowClick={arrowHandler}\n      />\n      <ul>\n        {items.slice(currentItem - 1, lastCurrentItem).map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}